currentUser = await _userManager.GetUserAsync(User)
User.Identity.Name


To Do


	chatrooms list view
		search chatrooms
			jquery autocomplete get chatrooms
				only display public chatrooms
				if no results then tell user
			on select ask to join
				if yes then add user to chatroom and redirect
		create new chatroom button
			public or private/public select list
			chatroom name text box
			add members
				jquery autocomplete
				add another user button
					on click create new textbox
			add chatroom to chatroom table
			chatroom members table
		list of chatrooms
	
	chatroom view
		members
		messages
		text box
		send button
			use signalr
			add message to db
		back to chatrooms list
		menu icon
			leave chatroom
				display message
					if creator transfer admin power to new user
				remove chatroom meber db
				decrement chatroom members count db
			add user to chatroom
			block chatroom
			if creator
				remove user from chatroom
				make chatroom private/public
				delete chatroom
		chatroom controller
		
	input field validations
	
	Anti Forgery Token
	
	signalr
		on login/register create connection
			connection name is user id
			get all chatrooms for user
				foreach chatroom
					if group named after chatroom id exists
						add connection to group
					else
						create group
						add connection to group
		when creating a chatroom 
			create chatroom
				add chatroom and members to db
			create group named after chatroom id
			add current user to group
			if connections named after other members' ids exist
				add those connections to group
		when joining a chatroom
			create new AppUserChatroom and add to db
			if group exists
				add connection to group
			else
				create group and add connection to group
		when sending a message
			add message to db
			send message to all connections in group	
		when user leaves chatroom
			remove AppUserChatroom
			remove connection from group
		when deleting a chatroom
			delete group
			deleter chatroom and all messages (test for cascade delete)
		when deleting account
			delete AppUser
			delete messages (test for cascade delete)
			delete AppUserChatroom (test for cascade delete)
		
	no duplicate usernames
		singleordefault()?
	
	avoid showing current user in autocomplete
	
	limit chatroom name length to 40 characters
	
	use timestamps to see if there are new/unread messages in a chatroom
	
	on login 
	
	validations